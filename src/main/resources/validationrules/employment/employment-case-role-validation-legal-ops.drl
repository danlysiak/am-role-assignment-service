package validationrules.iac;
import uk.gov.hmcts.reform.roleassignment.domain.model.Assignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.RoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.Request;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.Status;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RequestType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.GrantType;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleCategory;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.RoleType
import uk.gov.hmcts.reform.roleassignment.domain.model.ExistingRoleAssignment;
import uk.gov.hmcts.reform.roleassignment.domain.model.CaseAllocatorApproval;
import uk.gov.hmcts.reform.roleassignment.domain.model.Case;
import function uk.gov.hmcts.reform.roleassignment.domain.service.common.ValidationModelService.logMsg;
import uk.gov.hmcts.reform.roleassignment.domain.model.FeatureFlag;
import uk.gov.hmcts.reform.roleassignment.domain.model.enums.FeatureFlagEnum;
import uk.gov.hmcts.reform.roleassignment.util.ValidationUtil;

import java.time.ZonedDateTime;
import java.time.ZoneOffset
import java.time.temporal.ChronoUnit;

/*
 * The "tribunal-caseworker" case role
 */
rule "employment_tribunal_caseworker_create_case_roles"
when
    $f : FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "EMPLOYMENT",
                 roleAssignment.roleName == "tribunal-caseworker")
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("tribunal-caseworker"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "EMPLOYMENT")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : employment_tribunal_caseworker_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : employment_tribunal_caseworker_create_case_roles");
end;

/*
 * The "admin-caseworker" case role
 */
rule "employment_admin_caseworker_create_case_roles"
when
    $f : FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "EMPLOYMENT",
                 roleAssignment.roleName == "admin-caseworker")
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("hearing-centre-admin"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "EMPLOYMENT")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : employment_admin_caseworker_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : employment_admin_caseworker_create_case_roles");
end;

/*
 * The "ctsc-caseworker" case role
 */
rule "employment_ctsc_caseworker_create_case_roles"
when
    $f : FeatureFlag(status && flagName == FeatureFlagEnum.EMPLOYMENT_WA_1_0.getValue())
    $ca: CaseAllocatorApproval(
                 roleAssignment.status == Status.CREATE_REQUESTED,
                 roleAssignment.attributes["jurisdiction"].asText() == "EMPLOYMENT",
                 roleAssignment.roleName == "ctsc-caseworker")
         ExistingRoleAssignment(
                 actorId == $ca.getRoleAssignment().actorId,
                 roleType == RoleType.ORGANISATION,
                 roleName in ("ctsc"),
                 attributes["jurisdiction"] != null && attributes["jurisdiction"].asText() == "EMPLOYMENT")
then
    $ca.getRoleAssignment().setStatus(Status.CREATE_APPROVED);
    $ca.getRoleAssignment().log("Stage 1 approved : employment_ctsc_caseworker_create_case_roles");
    update($ca.getRoleAssignment());
    logMsg("Rule : employment_ctsc_caseworker_create_case_roles");
end;
